// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	jwt "github.com/golang-jwt/jwt/v4"
	mock "github.com/stretchr/testify/mock"
)

// FindUserByUsernameAndPassword is an autogenerated mock type for the FindUserByUsernameAndPassword type
type FindUserByUsernameAndPassword struct {
	mock.Mock
}

// Execute provides a mock function with given fields: username, password
func (_m *FindUserByUsernameAndPassword) Execute(username string, password string) jwt.MapClaims {
	ret := _m.Called(username, password)

	var r0 jwt.MapClaims
	if rf, ok := ret.Get(0).(func(string, string) jwt.MapClaims); ok {
		r0 = rf(username, password)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(jwt.MapClaims)
		}
	}

	return r0
}

type mockConstructorTestingTNewFindUserByUsernameAndPassword interface {
	mock.TestingT
	Cleanup(func())
}

// NewFindUserByUsernameAndPassword creates a new instance of FindUserByUsernameAndPassword. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFindUserByUsernameAndPassword(t mockConstructorTestingTNewFindUserByUsernameAndPassword) *FindUserByUsernameAndPassword {
	mock := &FindUserByUsernameAndPassword{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
