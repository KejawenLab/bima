// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// Middleware is an autogenerated mock type for the Middleware type
type Middleware struct {
	mock.Mock
}

// Attach provides a mock function with given fields: request, response
func (_m *Middleware) Attach(request *http.Request, response http.ResponseWriter) bool {
	ret := _m.Called(request, response)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*http.Request, http.ResponseWriter) bool); ok {
		r0 = rf(request, response)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Priority provides a mock function with given fields:
func (_m *Middleware) Priority() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

type mockConstructorTestingTNewMiddleware interface {
	mock.TestingT
	Cleanup(func())
}

// NewMiddleware creates a new instance of Middleware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMiddleware(t mockConstructorTestingTNewMiddleware) *Middleware {
	mock := &Middleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
